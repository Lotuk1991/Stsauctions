import httpx
from bs4 import BeautifulSoup
import json

def get_iaai_full_info(lot_id: str) -> str:
    # 1. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π Salvage ID
    url_data = f"https://vis.iaai.com/Home/GetVehicleData?salvageId={lot_id}"
    headers = {
        "User-Agent": "Mozilla/5.0"
    }

    try:
        r = httpx.get(url_data, headers=headers)
        if r.status_code != 200:
            return f"‚ùå IAAI –æ—à–∏–±–∫–∞: {r.status_code}"
        base_data = r.json()
        salvage_id = base_data.get("SalvageId")
    except Exception as e:
        return f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ª–æ—Ç–µ: {e}"

    # 2. HTML-–ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã VehicleDetail
    url_html = f"https://www.iaai.com/VehicleDetail/{salvage_id}"
    try:
        r = httpx.get(url_html, headers=headers)
        soup = BeautifulSoup(r.text, "html.parser")

        def get_text(label):
            block = soup.find("div", string=lambda t: t and label in t)
            if block and block.find_next("div"):
                return block.find_next("div").text.strip()
            return "‚Äî"

        vin = soup.select_one("div[data-uname='lotdetailVin']")
        vin_text = vin.text.strip() if vin else "‚Äî"

        branch = get_text("Selling Branch")
        damage = get_text("Primary Damage")
        loss = get_text("Loss")
        odometer = get_text("Odometer")
        title = get_text("Title/Sale Doc")
        model_tag = soup.select_one("h1")
        model = model_tag.text.strip() if model_tag else "‚Äî"

        image_tag = soup.select_one(".image-gallery img")
        image = image_tag["src"] if image_tag else "‚Äî"

        return f"""<b>üöò IAAI –õ–æ—Ç {lot_id}</b>
{model}
üîë VIN: {vin_text}
üìç –õ–æ–∫–∞—Ü–∏—è: {branch}
üìâ –ü—Ä–æ–±–µ–≥: {odometer}
üí• –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è: {loss} / {damage}
üìÑ –î–æ–∫—É–º–µ–Ω—Ç: {title}
üñºÔ∏è –§–æ—Ç–æ: {image}"""
    except Exception as e:
        return f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å HTML IAAI: {e}"
