from aiogram import types, Dispatcher
from copart_lot_parser import get_lot_info

async def lot_handler(message: types.Message):
    args = message.get_args()
    if not args or not args.isdigit():
        await message.reply("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ª–æ—Ç–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n/lot 47901355")
        return

    lot_number = args.strip()
    await message.answer(f"üîç –®—É–∫–∞—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø–æ –ª–æ—Ç—É `{lot_number}`...")

    try:
        info = await get_lot_info(lot_number)
        text = (
            f"üöó **{info['title']}**\n"
            f"üìç –ú—ñ—Å—Ü–µ –ø—Ä–æ–¥–∞–∂—É: *{info['location']}*\n"
            f"üîã –î–≤–∏–≥—É–Ω: {info['engine']}\n"
            f"‚õΩÔ∏è –ü–∞–ª–∏–≤–æ: {info['fuel']}\n"
            f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç: {info['doc_type']}\n"
            f"üîë VIN: `{info['vin']}`\n"
            f"\nüîó [–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ—Ç]({info['url']})"
        )
        await message.answer(text, parse_mode="Markdown")
    except Exception as e:
        await message.answer("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        print(f"LOT ERROR: {e}")

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(lot_handler, commands=["lot"])
